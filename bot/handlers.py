from aiogram import types, Dispatcher
from aiogram.types import WebAppInfo
from db import SessionLocal
from models import User
import json

GITHUB_APP_URL = "https://korchagingeorge.github.io"

async def start_command(message: types.Message):
    session = SessionLocal()
    args = message.get_args()
    user = session.query(User).filter_by(telegram_id=message.from_user.id).first()
    if not user:
        user = User(telegram_id=message.from_user.id, username=message.from_user.username)
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
        if args:
            try:
                ref_id = int(args)
                ref_user = session.query(User).get(ref_id)
                if ref_user:
                    user.referred_by = ref_id
                    ref_user.tickets += 1
                    session.add(ref_user)
            except ValueError:
                pass
        session.add(user)
        session.commit()
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Web App
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton(
        text="üåå –û—Ç–∫—Ä—ã—Ç—å Ton Space", web_app=WebAppInfo(url=GITHUB_APP_URL)
    ))
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Ton Space!", reply_markup=keyboard)
    session.close()

async def callback_handler(query: types.CallbackQuery):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App (—á–µ—Ä–µ–∑ query.data)
    data = json.loads(query.data)
    # TODO: —Ä–∞–∑–±–æ—Ä data –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π
    await query.answer('–ì–æ—Ç–æ–≤–æ')


def register_handlers(dp: Dispatcher):
    dp.register_message_handler(start_command, commands=['start'])
    dp.register_callback_query_handler(callback_handler)
